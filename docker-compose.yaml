version: '3.9'

services:
  web_server:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/web_server.dockerfile
      args:
        - UID
        - GID
        - CONTAINER_USER
        - CONTAINER_GROUP
        - CONTAINER_PASSWORD
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/dev/self-signed-cert:/var/www/self-signed-cert
      - ./src:/var/www/src
      - ./app:/var/www/app
    restart: unless-stopped
    container_name: nginx
    env_file:
      - .env
    depends_on:
      - server_side
      - client_side
      - sql_database
      - nosql_database
      - cache
  server_side:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/server_side.dockerfile
      args:
        - UID
        - GID
        - CONTAINER_USER
        - CONTAINER_GROUP
        - CONTAINER_PASSWORD
    volumes:
      - ./src:/var/www/src
    # ports:
    #   - 19000:22
    container_name: php_laravel
    restart: unless-stopped
    depends_on:
      - sql_database
      - nosql_database
      - cache
  client_side:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/client_side.dockerfile
    volumes:
      - /var/www/app/node_modules
      - ./app:/var/www/app
    stdin_open: true
    tty: true
    container_name: vue3
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - server_side
  sql_database:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/sql_database.dockerfile
      args:
        - UID
        - GID
        - CONTAINER_USER
        - CONTAINER_GROUP
        - CONTAINER_PASSWORD
    restart: unless-stopped
    volumes:
      - sql_database_volume:/var/lib/mysql
    environment:
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - 3306:3306
      - 13306:22
    container_name: mysql
  nosql_database:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/nosql_database.dockerfile
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - nosql_database_volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_PASSWORD}
    container_name: mongodb
  cache:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/cache.dockerfile
      args:
        - CACHE_PASSWORD=$DATABASE_PASSWORD
    restart: unless-stopped
    volumes:
      - cache_volume:/data
    ports:
      - 6379:6379
      # - 16379:22
    container_name: redis
  process_manager:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/process_manager.dockerfile
      args:
        - UID
        - GID
        - CONTAINER_USER
        - CONTAINER_GROUP
        - CONTAINER_PASSWORD
    volumes:
      - ./src:/var/www/src
    # ports:
    #   - 19001:22
    restart: unless-stopped
    container_name: supervisor
    depends_on:
      - server_side
      - cache
  cron:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/cron.dockerfile
      args:
        - UID
        - GID
        - CONTAINER_USER
        - CONTAINER_GROUP
        - CONTAINER_PASSWORD
    volumes:
      - ./src:/var/www/src
    ports:
      - 19002:22
    restart: unless-stopped
    container_name: cron
    depends_on:
      - server_side
  openssl:
    user: docker
    build:
      context: .
      dockerfile: ./dockerfiles/dev/openssl.dockerfile
    entrypoint: ['openssl']
    restart: unless-stopped
    container_name: openssl
volumes:
  cache_volume:
  sql_database_volume:
  nosql_database_volume:
